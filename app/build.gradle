apply plugin: 'com.android.application'
def getProductName() {
    return "Movie"
}
//获取当前系统的时间
def releaseTime() {
    return new Date().format("yyyyMMdd", TimeZone.getTimeZone("UTC"))
}
//系统key
//MD5: 1B:A4:B5:5B:31:6A:B0:14:CB:7A:97:CD:B6:B3:3C:E6
//SHA1: CE:50:89:38:83:6E:1C:5A:3F:5B:E2:E9:53:0F:E0:A1:29:4E:3E:C0
//SHA256: 30:33:28:AA:E6:3A:A1:8D:BE:B0:F6:5F:1B:CB:4A:A7:E6:05:4A:68:C6:6F:84:36:A4:7F:CE:F1:D0:E6:D5:E3
//签名算法名称: SHA1withRSA
//版本: 1
//正式key
//MD5: 98:58:A6:A8:8B:86:A2:4C:CE:5A:4B:53:A2:24:BC:1E
//SHA1: 1C:2A:99:A0:34:8A:78:74:BC:98:A1:BE:D4:83:64:BD:60:67:B7:38
//SHA256: E5:68:82:65:C3:C6:12:C0:BD:4E:84:72:8E:A5:E2:4E:1F:F3:4B:A9:6F:EF:60:2F:0B:DD:7D:CD:1A:58:82:A2
//签名算法名称: SHA256withRSA
//版本: 3

android {

    compileSdkVersion 26
    buildToolsVersion "26.0.3"
    defaultConfig {
        applicationId "com.movie.mling.movieapp"
        minSdkVersion 15
        targetSdkVersion 26
        versionCode 4
        versionName "2.0.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
//        multiDexEnabled true

        dexOptions {
            jumboMode true
        }
        ndk {
            // 设置支持的SO库架构
            abiFilters 'armeabi', 'x86', 'armeabi-v7a', 'x86_64', 'arm64-v8a', 'mips', 'mips64'
        }
        manifestPlaceholders = [
                JPUSH_PKGNAME: applicationId,
                JPUSH_APPKEY : "7f969342aac27e3dfa0a17f9", //JPush上注册的包名对应的appkey.//测试key:6f90243aaa5bd17fe2b40c5b //正式key:7f969342aac27e3dfa0a17f9
                JPUSH_CHANNEL: "developer-default", //暂时填写默认值即可.
        ]
    }
    signingConfigs {
        config {
            keyAlias 'movie'
            keyPassword '123456'
            storeFile file('../androidkey/movieapp.jks')
            storePassword '123456'
        }
//        MD5: 17:30:82:01:E2:DA:1C:7B:75:A4:C4:94:5F:D1:F7:01
//        SHA1: 3C:DF:80:52:AB:7C:F3:52:1B:DD:DB:54:7B:04:0A:A7:80:9D:D4:FB
//        SHA256: 35:26:6B:C8:9F:9F:94:11:BD:09:AD:CC:3A:69:24:A1:C3:47:8A:A1:60:35:8C:EA:3D:92:87:84:3C:1F:84:09
        buildTypes {
            release {
                debuggable false
                jniDebuggable true
                signingConfig signingConfigs.config
                minifyEnabled false
                zipAlignEnabled true
            }
            debug {
                debuggable true
                jniDebuggable true
                signingConfig signingConfigs.config
                minifyEnabled false
                zipAlignEnabled true
            }
        }
        repositories {
            flatDir {
                dirs 'libs'
            }
        }
        File propFile = file('signing.properties');
        if (propFile.exists()) {
            def Properties props = new Properties()
            props.load(new FileInputStream(propFile))
            if (props.containsKey('STORE_FILE') && props.containsKey('STORE_PASSWORD') &&
                    props.containsKey('KEY_ALIAS') && props.containsKey('KEY_PASSWORD')) {
                android.signingConfigs.release.storeFile = file(props['STORE_FILE'])
                android.signingConfigs.release.storePassword = props['STORE_PASSWORD']
                android.signingConfigs.release.keyAlias = props['KEY_ALIAS']
                android.signingConfigs.release.keyPassword = props['KEY_PASSWORD']
            } else {
                android.buildTypes.release.signingConfig = null
            }
        } else {
            android.buildTypes.release.signingConfig = null
        }
    }
// 多渠道
    productFlavors {
        //可以设置不同渠道渠道号，应用名称
        yy360 {
            //            buildConfigField "String", "CHANNEL_NUMBER", '"11111"'
        }
        anzhi {
            //            buildConfigField "String", "CHANNEL_NUMBER", '"11112"'
        }
        qq {
            //            buildConfigField "String", "CHANNEL_NUMBER", '"11113"'
        }
        baidu {
            //            buildConfigField "String", "CHANNEL_NUMBER", '"11114"'
        }
        wandoujia {
            //            buildConfigField "String", "CHANNEL_NUMBER", '"11115"'
        }
        oppo {
            //            buildConfigField "String", "CHANNEL_NUMBER", '"11116"'
        }
        sogou {
            //            buildConfigField "String", "CHANNEL_NUMBER", '"11117"'
        }
        wo {
            //            buildConfigField "String", "CHANNEL_NUMBER", '"11118"'
        }
        yingyonghui {
            //            buildConfigField "String", "CHANNEL_NUMBER", '"11119"'
        }
        jifeng {
            //            buildConfigField "String", "CHANNEL_NUMBER", '"1111110"'
        }
        mumayi {
            //            buildConfigField "String", "CHANNEL_NUMBER", '"1111111"'
        }
        chuizi {
            //            buildConfigField "String", "CHANNEL_NUMBER", '"1111112"'
        }
        nduo {
            //            buildConfigField "String", "CHANNEL_NUMBER", '"1111113"'
        }
        zhougang {
        }
    }

    // 多渠道批量替换
    productFlavors.all { flavor ->
        //批量修改Manifest占位符替换
        //在Manifest使用`${UMENG_CHANNEL_VALUE}`,`LEANCLOUD_CHANNEL_VALUE`,打包时将替换成渠道名，例如UMENG_CHANNEL_VALUE="anzhi";
        flavor.manifestPlaceholders = [UMENG_CHANNEL_VALUE: name, LEANCLOUD_CHANNEL_VALUE: name]
        //        flavor.manifestPlaceholders = [UMENG_CHANNEL_VALUE: name]
        if (project.hasProperty('_myAPPBuildVersionName')) {
            defaultConfig.versionName = _myAPPBuildVersionName
        }
    }
    // 批量打包
    applicationVariants.all { variant ->
        variant.outputs.each { output ->
            def outputFile = output.outputFile
            if (outputFile != null && outputFile.name.endsWith('.apk')) {
                def fileName
                if (variant.buildType.name.equals('release')) {
                    // myAPP_v版本号_渠道名.apk
                    //                    fileName = "myAPP_v${variant.versionName}_${variant.productFlavors[0].name}.apk"
                    fileName = getProductName() + "_v${defaultConfig.versionName}_${releaseTime()}_" + variant.productFlavors[0].name + '.apk'
                } else {
                    // myAPP_v版本号_渠道名_时间_编译类型名.apk
                    //                    fileName = getProductName()+"_v${variant.versionName}_${variant.productFlavors[0].name}_${releaseTime()}_${variant.buildType.name}.apk"
                    fileName = getProductName() + "_v${defaultConfig.versionName}_${releaseTime()}_" + '_debug.apk'
                }
                output.outputFile = new File(outputFile.parent + "/${variant.buildType.name}", fileName)
            }
        }
    }

    lintOptions {
        disable "ResourceType"
    }

}
dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile 'com.android.support:appcompat-v7:26.1.0'
    compile 'com.android.support.constraint:constraint-layout:1.0.2'
    compile 'com.android.support:design:26.1.0'
    compile 'com.android.support:cardview-v7:26.1.0'
    testCompile 'junit:junit:4.12'
    // rxAndroid
    compile 'io.reactivex:rxandroid:1.2.0'
    compile 'io.reactivex:rxjava:1.1.5'
    // Retrofit（需要gson + adapter-rxjava）
//    compile 'com.squareup.retrofit2:retrofit:2.0.0-beta4'
//    compile 'com.squareup.retrofit2:converter-gson:2.0.0-beta4'
//    compile 'com.squareup.retrofit2:adapter-rxjava:2.0.0-beta4'
//    compile 'com.squareup.okhttp3:logging-interceptor:3.4.1'
    compile 'com.loopj.android:android-async-http:1.4.9'
    //分包机制
    compile 'com.android.support:multidex:1.0.1'
    //图片加载
    compile 'com.github.bumptech.glide:glide:3.7.0'
    compile 'com.nostra13.universalimageloader:universal-image-loader:1.9.3'
    //optional
    compile 'com.github.bumptech.glide:glide:3.6.1'
    //optional
    compile 'com.squareup.picasso:picasso:2.4.0'
    compile 'com.contrarywind:Android-PickerView:3.2.6'
    compile 'cn.jiguang.sdk:jpush:3.1.1'
    // 此处以JPush 3.0.9 版本为例。
    compile 'cn.jiguang.sdk:jcore:1.1.9'
    // 此处以JCore 1.1.7 版本为例。
    //分包机制
    compile 'com.android.support:multidex:1.0.1'
    annotationProcessor 'org.androidannotations:androidannotations:4.0.0'
    compile 'org.androidannotations:androidannotations-api:4.0.0'
    //友盟
//    compile 'com.umeng.sdk:common:1.5.0'
//    compile 'com.umeng.sdk:analytics:7.5.0'
    compile 'com.github.barteksc:android-pdf-viewer:2.3.0'
    compile 'com.google.code.gson:gson:2.3.1'
    //    compile 'org.apache.commons:commons-io:1.3.2'
    compile project(':imagepickerModule')
    compile project(':PictureViewer')
    compile project(':libOpenUtils')
    compile project(':flexbox')
    compile 'com.tencent.bugly:crashreport_upgrade:latest.release'
    //其中latest.release指代最新Bugly SDK版本号，也可以指定明确的版本号，例如2.1.9
    compile 'com.tencent.bugly:nativecrashreport:latest.release'
    //其中latest.release指代最新Bugly NDK版本号，也可以指定明确的版
    compile ('org.apache.commons:commons-io:1.3.2') {
        exclude group:'org.apache.commons', module:'commons-io'
    }
}
